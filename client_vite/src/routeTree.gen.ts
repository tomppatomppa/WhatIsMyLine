/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AboutRouteImport } from './routes/about'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MarkdownEditChar123IdChar125RouteImport } from './routes/markdown-edit.{-$id}'
import { Route as AuthScriptsListRouteImport } from './routes/_auth.scripts-list'
import { Route as AuthLogsRouteImport } from './routes/_auth.logs'
import { Route as AuthDashboardRouteImport } from './routes/_auth.dashboard'
import { Route as AuthUserUploadRouteImport } from './routes/_auth.user.upload'
import { Route as AuthUserSettingsRouteImport } from './routes/_auth.user.settings'
import { Route as AuthScriptsIdRouteImport } from './routes/_auth.scripts.$id'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MarkdownEditChar123IdChar125Route =
  MarkdownEditChar123IdChar125RouteImport.update({
    id: '/markdown-edit/{-$id}',
    path: '/markdown-edit/{-$id}',
    getParentRoute: () => rootRouteImport,
  } as any)
const AuthScriptsListRoute = AuthScriptsListRouteImport.update({
  id: '/scripts-list',
  path: '/scripts-list',
  getParentRoute: () => AuthRoute,
} as any)
const AuthLogsRoute = AuthLogsRouteImport.update({
  id: '/logs',
  path: '/logs',
  getParentRoute: () => AuthRoute,
} as any)
const AuthDashboardRoute = AuthDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthRoute,
} as any)
const AuthUserUploadRoute = AuthUserUploadRouteImport.update({
  id: '/user/upload',
  path: '/user/upload',
  getParentRoute: () => AuthRoute,
} as any)
const AuthUserSettingsRoute = AuthUserSettingsRouteImport.update({
  id: '/user/settings',
  path: '/user/settings',
  getParentRoute: () => AuthRoute,
} as any)
const AuthScriptsIdRoute = AuthScriptsIdRouteImport.update({
  id: '/scripts/$id',
  path: '/scripts/$id',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/dashboard': typeof AuthDashboardRoute
  '/logs': typeof AuthLogsRoute
  '/scripts-list': typeof AuthScriptsListRoute
  '/markdown-edit/{-$id}': typeof MarkdownEditChar123IdChar125Route
  '/scripts/$id': typeof AuthScriptsIdRoute
  '/user/settings': typeof AuthUserSettingsRoute
  '/user/upload': typeof AuthUserUploadRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/dashboard': typeof AuthDashboardRoute
  '/logs': typeof AuthLogsRoute
  '/scripts-list': typeof AuthScriptsListRoute
  '/markdown-edit/{-$id}': typeof MarkdownEditChar123IdChar125Route
  '/scripts/$id': typeof AuthScriptsIdRoute
  '/user/settings': typeof AuthUserSettingsRoute
  '/user/upload': typeof AuthUserUploadRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/_auth/dashboard': typeof AuthDashboardRoute
  '/_auth/logs': typeof AuthLogsRoute
  '/_auth/scripts-list': typeof AuthScriptsListRoute
  '/markdown-edit/{-$id}': typeof MarkdownEditChar123IdChar125Route
  '/_auth/scripts/$id': typeof AuthScriptsIdRoute
  '/_auth/user/settings': typeof AuthUserSettingsRoute
  '/_auth/user/upload': typeof AuthUserUploadRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/login'
    | '/dashboard'
    | '/logs'
    | '/scripts-list'
    | '/markdown-edit/{-$id}'
    | '/scripts/$id'
    | '/user/settings'
    | '/user/upload'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/login'
    | '/dashboard'
    | '/logs'
    | '/scripts-list'
    | '/markdown-edit/{-$id}'
    | '/scripts/$id'
    | '/user/settings'
    | '/user/upload'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/about'
    | '/login'
    | '/_auth/dashboard'
    | '/_auth/logs'
    | '/_auth/scripts-list'
    | '/markdown-edit/{-$id}'
    | '/_auth/scripts/$id'
    | '/_auth/user/settings'
    | '/_auth/user/upload'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  AboutRoute: typeof AboutRoute
  LoginRoute: typeof LoginRoute
  MarkdownEditChar123IdChar125Route: typeof MarkdownEditChar123IdChar125Route
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/markdown-edit/{-$id}': {
      id: '/markdown-edit/{-$id}'
      path: '/markdown-edit/{-$id}'
      fullPath: '/markdown-edit/{-$id}'
      preLoaderRoute: typeof MarkdownEditChar123IdChar125RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/scripts-list': {
      id: '/_auth/scripts-list'
      path: '/scripts-list'
      fullPath: '/scripts-list'
      preLoaderRoute: typeof AuthScriptsListRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/logs': {
      id: '/_auth/logs'
      path: '/logs'
      fullPath: '/logs'
      preLoaderRoute: typeof AuthLogsRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/dashboard': {
      id: '/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/user/upload': {
      id: '/_auth/user/upload'
      path: '/user/upload'
      fullPath: '/user/upload'
      preLoaderRoute: typeof AuthUserUploadRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/user/settings': {
      id: '/_auth/user/settings'
      path: '/user/settings'
      fullPath: '/user/settings'
      preLoaderRoute: typeof AuthUserSettingsRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/scripts/$id': {
      id: '/_auth/scripts/$id'
      path: '/scripts/$id'
      fullPath: '/scripts/$id'
      preLoaderRoute: typeof AuthScriptsIdRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthDashboardRoute: typeof AuthDashboardRoute
  AuthLogsRoute: typeof AuthLogsRoute
  AuthScriptsListRoute: typeof AuthScriptsListRoute
  AuthScriptsIdRoute: typeof AuthScriptsIdRoute
  AuthUserSettingsRoute: typeof AuthUserSettingsRoute
  AuthUserUploadRoute: typeof AuthUserUploadRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthDashboardRoute: AuthDashboardRoute,
  AuthLogsRoute: AuthLogsRoute,
  AuthScriptsListRoute: AuthScriptsListRoute,
  AuthScriptsIdRoute: AuthScriptsIdRoute,
  AuthUserSettingsRoute: AuthUserSettingsRoute,
  AuthUserUploadRoute: AuthUserUploadRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  AboutRoute: AboutRoute,
  LoginRoute: LoginRoute,
  MarkdownEditChar123IdChar125Route: MarkdownEditChar123IdChar125Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
